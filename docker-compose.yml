version: '3.8'

services:
  ai-video-maker:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-3.5-turbo
      - MAX_VIDEO_DURATION=300
      - DEFAULT_VIDEO_RESOLUTION=1280x720
      - DEFAULT_TTS_PROVIDER=gtts
      - DATABASE_URL=${DATABASE_URL:-sqlite:///data/app.db}
      - MYSQL_HOST=${MYSQL_HOST:-mysql}
      - MYSQL_PORT=${MYSQL_PORT:-3306}
      - MYSQL_USER=${MYSQL_USER:-root}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-ai_video_maker}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_ENABLED=true
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - ./data:/app/data
      - ./assets:/app/assets
      - ./templates:/app/templates
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-ai_video_maker}
      - MYSQL_USER=${MYSQL_USER:-aiuser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - ai-video-maker
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  celery-worker:
    build: .
    command: celery -A services.task_queue.celery_app worker -l info --concurrency=2
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=${DATABASE_URL:-sqlite:///data/app.db}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_ENABLED=true
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
      - ai-video-maker
    restart: unless-stopped

volumes:
  uploads:
  output:
  data:
  assets:
  templates:
  logs:
  mysql_data: